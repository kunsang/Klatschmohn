/* -------------------------------------------------------------------------------

	Custom JS

	1.  Main Slider (Flexslider)
	2.  Image Slider (Flexslider)
	3.  Main Navigation
	4.  Project Carousel
	5.  Responsive Video
	6.  Black & White Hover Effect
	7.  Accordion
	8.  Tabs
	9. Isotope
	10. Fancybox
	11. Back to Top
	12. Twitter Feed
	13. Flickr Feed
	14. Google Maps

---------------------------------------------------------------------------------- */

// Global scope containers
var googlemaps = new Array();
	   
jQuery(document).ready(function() { 
	
/* --------------------------------------------------------------------------- */
/*  1.  Empty P Tag
/* --------------------------------------------------------------------------- */
jQuery('p:empty').remove(); 
jQuery('p').each(function(){
	if( jQuery.trim( jQuery(this) ) === "" ){
		jQuery(this).remove(); // $(item).remove();
	}
});
	

/* --------------------------------------------------------------------------- */
/*  7.  Page Scroller (Smooth Scrolling)
/* --------------------------------------------------------------------------- */   
// jQuery("html").niceScroll({
//  styler:"fb",
//  cursorcolor:'#616b74',
//  cursorborder:'0',
//  zindex:9999
// });


/* --------------------------------------------------------------------------- */
/*  7.  Page Scroller (Smooth Scrolling)
/* --------------------------------------------------------------------------- */       
jQuery(window).scroll(function(e){ 
//   console.log('called');
	  $el = jQuery('#stickyheader'); 
	  
	  var stickyHeaderTop = jQuery('#stickyheader').offset().top;
	  stickyHeaderTop = stickyHeaderTop + 40;
	  
	  if (jQuery(this).scrollTop() > 100 && $el.css('position') != 'fixed'){            
			if (jQuery(window).width() > 995) {                         
				if( jQuery(window).scrollTop() > stickyHeaderTop ) {
					jQuery('#stickyheader').css({'position': 'fixed', 'top': '0px', 'opacity':'0'}).animate({opacity:1},300);
					jQuery('#stickyheader').addClass("sticky").removeClass("nostick");
					jQuery('.data-wrapper').addClass("stickyheader");
				} else {                    
					jQuery('#stickyheader').removeClass("sticky");
					jQuery('.data-wrapper').removeClass("stickyheader");
				}               
				
			}else{
				jQuery('#stickyheader').removeClass("sticky").addClass("nostick");
				jQuery('#stickyheader').css({'position': 'static', 'top': '0px'});
				jQuery('.data-wrapper').removeClass("stickyheader");
			}       
		
	  }
	  if (jQuery(this).scrollTop() < 80 && $el.css('position') == 'fixed'){
		jQuery('#stickyheader').css({'position': 'static', 'top': '0px'});          
		jQuery('#stickyheader').removeClass("sticky").addClass("nostick");
		jQuery('.data-wrapper').removeClass("stickyheader");
	  }
});

   
   
/* --------------------------------------------------------------------------- */
/*  1.  Main Slider (Flexslider)
/* --------------------------------------------------------------------------- */

	jQuery('.flexslider').flexslider({
		namespace: "flex-",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin
		selector: ".slides > li",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
		animation: "slide",             //String: Select your animation type, "fade" or "slide"
		easing: "swing",                //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
		direction: "horizontal",        //String: Select the sliding direction, "horizontal" or "vertical"
		reverse: false,                 //{NEW} Boolean: Reverse the animation direction
		animationLoop: true,            //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
		smoothHeight: false,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode  
		startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)
		slideshow: true,                //Boolean: Animate slider automatically
		slideshowSpeed: 7000,           //Integer: Set the speed of the slideshow cycling, in milliseconds
		animationSpeed: 600,            //Integer: Set the speed of animations, in milliseconds
		initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds
		randomize: false,               //Boolean: Randomize slide order
		
		// Usability features
		pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
		pauseOnHover: false,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
		useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available
		touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
		video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches
		
		// Primary Controls
		controlNav: false,              //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
		directionNav: true,             //Boolean: Create navigation for previous/next navigation? (true/false)
		prevText: "Previous",           //String: Set the text for the "previous" directionNav item
		nextText: "Next",               //String: Set the text for the "next" directionNav item
		
		// Secondary Navigation
		keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys
		multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
		mousewheel: false,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
		pausePlay: false,               //Boolean: Create pause/play dynamic element
		pauseText: "Pause",             //String: Set the text for the "pause" pausePlay item
		playText: "Play",               //String: Set the text for the "play" pausePlay item
	  });



/* --------------------------------------------------------------------------- */
/*  2.  Image Slider (Flexslider)
/* --------------------------------------------------------------------------- */

	jQuery('.image-slider').flexslider({
		namespace           : "flex-",           //{NEW} String: Prefix string attached to the class of every element generated by the plugin
		selector            : ".slides > li",    //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
		animation           : "slide",            //String: Select your animation type, "fade" or "slide"
		easing              : "swing",           //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
		direction           : "horizontal",      //String: Select the sliding direction, "horizontal" or "vertical"
		reverse             : false,             //{NEW} Boolean: Reverse the animation direction
		animationLoop       : true,              //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
		smoothHeight        : false,             //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
		startAt             : 0,                 //Integer: The slide that the slider should start on. Array notation (0 = first slide)
		slideshow           : false,              //Boolean: Animate slider automatically
		slideshowSpeed      : 7000,              //Integer: Set the speed of the slideshow cycling, in milliseconds
		animationSpeed      : 600,               //Integer: Set the speed of animations, in milliseconds
		initDelay           : 0,                 //{NEW} Integer: Set an initialization delay, in milliseconds
		randomize           : false,             //Boolean: Randomize slide order
		 
		// Usability features
		pauseOnAction       : true,              //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
		pauseOnHover        : false,             //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
		useCSS              : true,              //{NEW} Boolean: Slider will use CSS3 transitions if available
		touch               : true,              //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
		video               : false,             //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches
		 
		// Primary Controls
		controlNav          : false,              //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
		directionNav        : true,              //Boolean: Create navigation for previous/next navigation? (true/false)
		prevText            : "Previous",        //String: Set the text for the "previous" directionNav item
		nextText            : "Next",            //String: Set the text for the "next" directionNav item
		 
		// Secondary Navigation
		keyboard            : true,              //Boolean: Allow slider navigating via keyboard left/right keys
		multipleKeyboard    : false,             //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
		mousewheel          : false,             //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
		pausePlay           : false,             //Boolean: Create pause/play dynamic element
		pauseText           : 'Pause',           //String: Set the text for the "pause" pausePlay item
		playText            : 'Play',            //String: Set the text for the "play" pausePlay item
		 
		// Special properties
		controlsContainer   : "",                //{UPDATED} Selector: USE CLASS SELECTOR. Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be ".flexslider-container". Property is ignored if given element is not found.
		manualControls      : "",                //Selector: Declare custom control navigation. Examples would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
		sync                : "",                //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
		asNavFor            : "",                //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider
	});
	
	
	
	
/* --------------------------------------------------------------------------- */
/*  2.  Testimonials Slider (Flexslider)
/* --------------------------------------------------------------------------- */

	jQuery('.testimonials-carousel').flexslider({
		namespace           : "flex-",           //{NEW} String: Prefix string attached to the class of every element generated by the plugin
	  //  selector            : ".slides > li",    //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
		animation           : "slide",            //String: Select your animation type, "fade" or "slide"
		easing              : "swing",           //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
		direction           : "horizontal",      //String: Select the sliding direction, "horizontal" or "vertical"
		reverse             : false,             //{NEW} Boolean: Reverse the animation direction
		animationLoop       : true,              //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
		smoothHeight        : true,             //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
		startAt             : 0,                 //Integer: The slide that the slider should start on. Array notation (0 = first slide)
		slideshow           : false,              //Boolean: Animate slider automatically
		slideshowSpeed      : 7000,              //Integer: Set the speed of the slideshow cycling, in milliseconds
		animationSpeed      : 600,               //Integer: Set the speed of animations, in milliseconds
		initDelay           : 0,                 //{NEW} Integer: Set an initialization delay, in milliseconds
		randomize           : false,             //Boolean: Randomize slide order
		 
		// Usability features
		pauseOnAction       : true,              //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
		pauseOnHover        : false,             //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
		useCSS              : true,              //{NEW} Boolean: Slider will use CSS3 transitions if available
		touch               : true,              //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
		video               : false,             //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches
		 
		// Primary Controls
		controlNav          : false,              //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
		directionNav        : true,              //Boolean: Create navigation for previous/next navigation? (true/false)
		prevText            : "Previous",        //String: Set the text for the "previous" directionNav item
		nextText            : "Next",            //String: Set the text for the "next" directionNav item
		 
		// Secondary Navigation
		keyboard            : true,              //Boolean: Allow slider navigating via keyboard left/right keys
		multipleKeyboard    : false,             //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
		mousewheel          : false,             //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
		pausePlay           : false,             //Boolean: Create pause/play dynamic element
		pauseText           : 'Pause',           //String: Set the text for the "pause" pausePlay item
		playText            : 'Play',            //String: Set the text for the "play" pausePlay item
		 
		// Special properties
		controlsContainer   : "",                //{UPDATED} Selector: USE CLASS SELECTOR. Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be ".flexslider-container". Property is ignored if given element is not found.
		manualControls      : "",                //Selector: Declare custom control navigation. Examples would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
		sync                : "",                //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
		asNavFor            : "",                //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider
	});


/* --------------------------------------------------------------------------- */
/*  2.  Tweets bar at footer (flexslider)
/* --------------------------------------------------------------------------- */

jQuery('.tweets').flexslider({
	controlNav: true,
	directionNav: false,
	smoothHeight: true,
	auto: false,
	animation: "fade",
	animationSpeed: 700,
	slideshowSpeed: 5000, 
});



/* --------------------------------------------------------------------------- */
/*  3.  Main Navigation
/* --------------------------------------------------------------------------- */

	var navigation = jQuery('#navigation');    
	// Regular nav
	navigation.on('mouseenter', 'li', function() {
		var target    = jQuery(this),
			subMenu = target.children('ul');
		if( subMenu.length ) target.addClass('hover');
		subMenu.hide().stop(true, true).slideDown(150);
	}).on('mouseleave', 'li', function() {
		jQuery(this).removeClass('hover').children('ul').stop(true, true).slideUp(70);
	});

	// Responsive nav
	selectnav('navigation', {
		label: 'Navigation...',
		autoselect: false,
		nested: true,
		indent: '–-'
	});



/* --------------------------------------------------------------------------- */
/*  4.  Project Carousel
/* --------------------------------------------------------------------------- */

(function() {    
	var carousel = jQuery('.project-carousel');
	if( carousel.length ) {
		var scrollCount;
		function getWindowWidth() {
			if( jQuery(window).width() < 480 ) {
				scrollCount = 1;
			} else if( jQuery(window).width() < 768 ) {
				scrollCount = 2;
			} else if( jQuery(window).width() < 980 ) {
				scrollCount = 3;
			} else {
				scrollCount = 4;
			}
		}


		function initCarousel( carousel ) {
			jQuery('.jcarousel-control a').bind('click', function() { carousel.scroll(jcarousel.intval((this).text())); return false; });
			jQuery('#project-next').bind('click', function() { carousel.next(); return false; });
			jQuery('#project-prev').bind('click', function() { carousel.prev(); return false; });

			carousel.each(function() {
				jQuery(this).jcarousel({
					animation     : 600,
					easing        : 'easeOutCubic',
					scroll        : scrollCount,
					buttonNextHTML : null,
					buttonPrevHTML : null
				});
			});
		}


		function adjustCarousel() {
			carousel.each(function() {
				var target    = jQuery(this),
					lis     = target.children('li')
					newWidth = lis.length * lis.first().outerWidth( true ) + 100;
				getWindowWidth();

				if( target.width() !== newWidth ) {
					target.css('width', newWidth )
						 .data('resize','true');
					initCarousel( target );
					target.jcarousel('scroll', 1);
					var timer = window.setTimeout( function() {
						window.clearTimeout( timer );
						target.data('resize', null);
					}, 600 );
				}
			});
		}


		getWindowWidth();
		initCarousel( carousel );


		// Window resize
		jQuery(window).on('resize', function() {
			var timer = window.setTimeout( function() {
				window.clearTimeout( timer );
				adjustCarousel();
			}, 30 );
		});

	}

})();

/* --------------------------------------------------------------------------- */
/*  5.  Responsive Video
/* --------------------------------------------------------------------------- */
	
	// jQuery('#content').fitVids();


/* --------------------------------------------------------------------------- */
/*  6.  Accordion
/* --------------------------------------------------------------------------- */

	jQuery('.accordion').accordion( {
		collapsible: true,
		autoHeight: false
	});


/* --------------------------------------------------------------------------- */
/*  7.  Tabs
/* --------------------------------------------------------------------------- */

	jQuery('.tabs').tabs( {
		fx: { 
			opacity: 'toggle',
			duration:'fast'
		}
	});


/* --------------------------------------------------------------------------- */
/*  9. Fancybox
/* --------------------------------------------------------------------------- */

	// jQuery('.folio').fancybox({
	//     closeBtn        : false,
	//     padding         : 0,
	//     openEffect      : 'fade',
	//     closeEffect     : 'fade',
	//     nextEffect      : 'fade',
	//     prevEffect      : 'fade',
	//     helpers : {
	//         overlay : {
	//             css : {
	//                 'background' : 'rgba(51, 51, 51, 0.8)'
	//             }
	//         },
	//         title : {
	//             type : 'over'
	//         }
	//     }
	// });

/* --------------------------------------------------------------------------- */
/*  9. Isotope
/* --------------------------------------------------------------------------- */

	(function() {
		
		// modified Isotope methods for gutters in masonry
		jQuery.Isotope.prototype._getMasonryGutterColumns = function() {
			var gutter = this.options.masonry && this.options.masonry.gutterWidth || 0;
				containerWidth = this.element.width();
		  
			this.masonry.columnWidth = this.options.masonry && this.options.masonry.columnWidth ||
						// or use the size of the first item
						this.$filteredAtoms.outerWidth(true) ||
						// if there's no items, use size of container
						containerWidth;

			this.masonry.columnWidth += gutter;

			this.masonry.cols = Math.floor( ( containerWidth + gutter ) / this.masonry.columnWidth );
			this.masonry.cols = Math.max( this.masonry.cols, 1 );
		};
		
		jQuery.Isotope.prototype._masonryReset = function() {
			// layout-specific props
			this.masonry = {};
			// FIXME shouldn't have to call this again
			this._getMasonryGutterColumns();
			var i = this.masonry.cols;
			this.masonry.colYs = [];
			while (i--) {
				this.masonry.colYs.push( 0 );
			}
		};
		
		jQuery.Isotope.prototype._masonryResizeChanged = function() {
			var prevSegments = this.masonry.cols;
			// update cols/rows
			this._getMasonryGutterColumns();
			// return if updated cols/rows is not equal to previous
			return ( this.masonry.cols !== prevSegments );
		};
		
		// Set Gutter width
		var gutterSize;

		function getWindowWidth() {
			if( jQuery(window).width() < 480 ) {
				gutterSize = 0;
			} else if( jQuery(window).width() < 768 ) {
				gutterSize = 10;
			} else if( jQuery(window).width() < 980 ) {
				gutterSize = 14;
			} else {
				gutterSize = 20;
			}
		}

		// Portfolio settings
		var container          = jQuery('.project-feed');
		var filter             = jQuery('.project-feed-filter');

		jQuery(window).smartresize(function(){
			getWindowWidth();
			container.isotope({
				filter              : '*',
				resizable           : true,
				// set columnWidth to a percentage of container width
				masonry: {
					gutterWidth     : gutterSize
				}
			});
		});

		container.imagesLoaded( function(){
			jQuery(window).smartresize();
		});

		// Filter items when filter link is clicked
		filter.find('a').click(function() {
			var selector = jQuery(this).attr('data-filter');
			filter.find('a').removeClass('current');
			jQuery(this).addClass('current');
			container.isotope({ 
				filter             : selector,
				animationOptions   : {
				animationDuration  : 750,
				easing             : 'linear',
				queue              : false,
				}
			});
			return false;
		});


		// Blog with Infinite Scroll settings
		var blogContainer          = jQuery('.post-block-feed');

		jQuery(window).smartresize(function(){
			getWindowWidth();
			blogContainer.isotope({
				resizable           : true,
				itemSelector : '.post-block',
				// set columnWidth to a percentage of container width
				masonry: {
					gutterWidth     : gutterSize
				}
			});
		});

		blogContainer.imagesLoaded( function(){
			jQuery(window).smartresize();
		});

		blogContainer.infinitescroll({
			navSelector  : '#page-nav',    // selector for the paged navigation 
			nextSelector : '#page-nav a',  // selector for the NEXT link (to page 2)
			itemSelector : '.post-block',     // selector for all items you'll retrieve
			loading: {
				loadingText  : 'Loading new posts...',
				finishedMsg: 'No more pages to load'
			}
		},
			// call Isotope as a callback
			function( newElements ) {
				var newElems = jQuery( newElements ).css({ opacity: 0 });
				// ensure that images load before adding to masonry layout
				newElems.imagesLoaded(function(){
				// show elems now they're ready
					newElems.animate({ opacity: 1 });
					blogContainer.isotope( 'appended', newElems, true );
				});
			}
		);
	})();

/* --------------------------------------------------------------------------- */
/*  10. Back to Top
/* --------------------------------------------------------------------------- */
	
	var backToTop = jQuery('#back-to-top');
	backToTop.hide();
	jQuery(window).scroll(function () {
		if (jQuery(this).scrollTop() > 150) {
			backToTop.css('display', 'block');
		} else {
			backToTop.css('display', 'none');
		}
	});
	backToTop.click(function () {
		jQuery('body, html').animate({
			scrollTop: 0
		}, 600);
		return false;
	});

/* --------------------------------------------------------------------------- */
/*  11. Twitter Feed
/* --------------------------------------------------------------------------- */

	jQuery('.twitter-feed').each(
		function(i, val) {
			uid = jQuery(val).attr('data-uid');
			cnt = parseInt(jQuery(val).attr('data-count'));
			if (isNaN(cnt)) {
				cnt = 2;
			}
			jQuery(val).jTweetsAnywhere({
				username: uid, 
				count: cnt, 
				showTweetFeed: {
					showProfileImages: false,
					showUserScreenNames: false,
					showUserFullNames: false,
					showInReplyTo: false,
					showActionReply: false,
					showActionRetweet: false,
					showActionFavorite: false
				}
			});
		}    
	);


/* --------------------------------------------------------------------------- */
/*  12. Flickr Feed
/* --------------------------------------------------------------------------- */

	jQuery('.photo-stream').each(
		function(i, val) {
			uid = jQuery(val).attr('data-uid');
			cols = parseInt(jQuery(val).attr('data-cols'));
			if (isNaN(cols)) {
				cols = 8;
			}
			jQuery(val).flickrfeed(uid,'', {
				limit: cols,
				title: false,
				date: false,
				imagesize: 'square'
			});
		}
	);

/* --------------------------------------------------------------------------- */
/*  13. Skills
/* --------------------------------------------------------------------------- */
	jQuery('.skillbar').each(function(){
		dataperc = jQuery(this).attr('data-perc'),
		jQuery(this).find('.skill-progress').animate({ "width" : dataperc + "%"}, dataperc * 20);
	});

	
/* --------------------------------------------------------------------------- */
/*  14. Google Maps
/* --------------------------------------------------------------------------- */    
	var gmaps = jQuery('.google-map');
	if (gmaps.length > 0)
	{   
		jQuery.getScript("https://www.google.com/jsapi", function()
		{
			google.load('maps', '3', { other_params: 'sensor=false', callback: function()
			{
				gmaps.each(function() {
					var target = jQuery(this);
					var lat = target.attr('data-lat');
					var lng = target.attr('data-lng');
					var zoom = parseInt(target.attr("data-zoom"), 10) || 10;
					var title = target.attr('data-title');
					var map = null;
					var styles = [
						{
							stylers: [
								{ saturation: -100 }
							]
						},{
							featureType: "road",
							elementType: "geometry",
							stylers: [
								{ lightness: 100 },
								{ visibility: "simplified" }
							]
						},{
							featureType: "road",
							elementType: "labels",
							stylers: [
								{ visibility: "off" }
							]
						}
					];                    
					var styledMap = new google.maps.StyledMapType(styles, {name: "Styled Map"});
					latlng = new google.maps.LatLng(lat, lng),
						mapOptions = {
							zoom                    : zoom,
							center                  : latlng,
							panControl              : false,
							zoomControl             : true,
							scaleControl            : false,
							mapTypeControl          : false,
							mapTypeControlOptions   : {
								mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
							}
					};                 
					map = new google.maps.Map(this, mapOptions);                    
					map.mapTypes.set('map_style', styledMap);
					map.setMapTypeId('map_style');
					var contentString = '<div id="google-map-marker">{0}</div>'.format(title);
					var infowindow = new google.maps.InfoWindow({
						content: contentString
					});
					var marker = new google.maps.Marker({
						position: latlng,
						map: map, 
						title: title
					});
					google.maps.event.addListener(marker, 'click', function() {
						infowindow.open(map,marker);
					});                    
					googlemaps.push(map);
				});                
		   }});
		});        
   }
   
	 
   
});

//Accordion Refresh when window resize
jQuery(window).resize(function(){
	jQuery(".accordion").accordion("refresh");
});























